name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  pull-requests: write
  checks: write
  actions: read

jobs:
  build-and-check:
    runs-on: ubuntu-latest-big
    timeout-minutes: 70
    name: Check
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: moonrepo/setup-toolchain@v0
        with:
          moon-version: 1.38.6
          auto-install: true
          cache-base: main
      - name: Restore Bun Package Cache
        id: restore-bun-cache
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/.bun/install/cache
          key: bun-packages-${{ runner.os }}-v1-${{ hashFiles('bun.lock') }}
      - name: Build and Check
        id: build-and-deploy
        run: moon ci --color
      - uses: appthrust/moon-ci-retrospect@v1
        if: success() || failure()
      - uses: "moonrepo/run-report-action@v1"
        if: success() || failure()
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive Moon Cache
        uses: actions/upload-artifact@v4
        with:
          name: moon-cache-check
          if-no-files-found: warn
          include-hidden-files: true
          path: .moon/cache
        if: failure()
      - name: Save Bun Cache
        uses: actions/cache/save@v4
        if: ${{ steps.build-and-deploy.outcome == 'success' }}
        with:
          path: /home/runner/.bun/install/cache
          key: ${{ steps.restore-bun-cache.outputs.cache-primary-key }}
